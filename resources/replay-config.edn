{:service-name "kixi.datastore-replay"
 :alerts #profile {:default {:alerts? false}
                   :staging-replay {:region "eu-central-1"
                             :sns  "arn:aws:sns:eu-central-1:165664414043:witan-to-slack"
                             :alerts? true}
                   :prod {:region "eu-west-1"
                          :sns  "arn:aws:sns:eu-west-1:720433613167:witan-to-slack"
                          :alerts? true}}
 :metrics {:json-reporter {:seconds #profile {:staging-replay 60
                                              :prod 60
                                              :default 300
                                              :staging-replay-jenkins 600}}}
 :logging {:level #profile {:default :info
                            :prod :error} ; e/o #{:trace :debug :info :warn :error :fatal :report}
           ;; Control log filtering by namespaces/patterns. Useful for turning off
           ;; logging in noisy libraries, etc.:
           ;;:ns-whitelist  ["whiner.*"] #_["my-app.foo-ns"]
           :ns-blacklist ["org.eclipse.jetty"]
           :kixi-comms-verbose-logging #profile {:default true
                                                 :staging-replay true
                                                 :prod true}
           :appender #profile {:default :println
                               :staging-replay :json
                               :prod :json}}
 :metadatastore {:dynamodb #profile {:local {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                     :local-kinesis {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                     :staging-replay-jenkins {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                     :staging-replay {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                     :prod {:endpoint "dynamodb.eu-west-1.amazonaws.com"}}}
 :schemastore {:dynamodb #profile {:local {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                   :local-kinesis {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                   :staging-replay-jenkins {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                   :staging-replay {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                   :prod {:endpoint "dynamodb.eu-west-1.amazonaws.com"}}}
 :segmentation {:inmemory {}}
 :communications #profile {:local {:coreasync {:app "kixi.datastore-replay"
                                               :metrics-level :NONE}}
                           :local-kinesis {:kinesis {:app "kixi.datastore-replay"
                                                     :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                     :region-name "eu-central-1"
                                                     :dynamodb-endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                                     :streams {:event #env EVENT_STREAM}
                                                     :metrics-level :NONE
                                                     :initial-lease-table-read-capacity 1
                                                     :initial-lease-table-write-capacity 1
                                                     :teardown-kinesis true
                                                     :teardown-dynamodb true
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 100]
                                                     }}
                           :staging-replay-jenkins {:coreasync {:app "kixi.datastore-replay"}}
                           :staging-replay {:kinesis {:app "kixi.datastore-replay"
                                                      :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                      :region-name "eu-central-1"
                                                      :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                      :initial-lease-table-read-capacity 1
                                                      :initial-lease-table-write-capacity 1
                                                      :streams {:event  #env EVENT_STREAM}
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                                      :metrics-level :NONE
                                               }}
                           :staging-replay-integration {:kinesis {:app "kixi.datastore-staging-replay-test"
                                                                  :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                                  :region-name "eu-central-1"
                                                                  :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                                  :initial-lease-table-read-capacity 1
                                                                  :initial-lease-table-write-capacity 1
                                                                  :streams {:event  #env EVENT_STREAM}
                                                                  :teardown-dynamodb true
                                                                  :metrics-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                                           }}
                           :prod {:kinesis {:app "kixi.datastore-replay"
                                            :endpoint "kinesis.eu-west-1.amazonaws.com"
                                            :region-name "eu-west-1"
                                            :dynamodb-endpoint "dynamodb.eu-west-1.amazonaws.com"
                                            :initial-lease-table-read-capacity 2
                                            :initial-lease-table-write-capacity 2
                                            :streams {:event  #env EVENT_STREAM}
                                            :metrics-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                            }}}
 :repl {:port 5002}}
