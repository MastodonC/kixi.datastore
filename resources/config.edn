{:service-name "kixi.datastore"
 :alerts #profile {:default {:alerts? false}
                   :staging {:region "eu-central-1"
                             :sns  "arn:aws:sns:eu-central-1:165664414043:witan-to-slack"
                             :alerts? true}
                   :prod {:region "eu-west-1"
                          :sns  "arn:aws:sns:eu-west-1:720433613167:witan-to-slack"
                          :alerts? true}}
 :web-server #profile {:default {:port  #long #or [#env PORT "8080"]
                                 :request-logging? true}
                       :staging {:port 18080
                                 :request-logging? true}
                       :prod {:port 18080
                              :request-logging? true}}
 :metrics {:json-reporter {:seconds #profile {:staging 60
                                              :prod 60
                                              :default 300
                                              :staging-jenkins 600}}}
 :logging {:level #profile {:default :debug
                            :prod :error} ; e/o #{:trace :debug :info :warn :error :fatal :report}
           ;; Control log filtering by namespaces/patterns. Useful for turning off
           ;; logging in noisy libraries, etc.:
           ;;:ns-whitelist  ["whiner.*"] #_["my-app.foo-ns"]
           :ns-blacklist ["org.eclipse.jetty"]
           :kixi-comms-verbose-logging #profile {:default true
                                                 :staging true
                                                 :prod false}
           :appender #profile {:default :println
                               :staging :json
                               :prod :json}}
 :filestore-upload-cache #profile {:default {:dynamodb {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}}
                                   :local-kinesis {:dynamodb {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}}
                                   :staging-jenkins {:dynamodb {:endpoint "dynamodb.eu-central-1.amazonaws.com"}}
                                   :staging {:dynamodb {:endpoint "dynamodb.eu-central-1.amazonaws.com"}}
                                   :prod {:dynamodb {:endpoint "dynamodb.eu-west-1.amazonaws.com"}}}
 :filestore #profile {:default {:local {:base-dir "/kixi-datastore"}
                                #_:s3 #_{:bucket "staging-witan-kixi-datastore-filestore-jenkins"
                                         :endpoint "s3.eu-central-1.amazonaws.com"
                                         :link-expiration-mins 10}

                                #_:local-kinesis #_{:base-dir "/kixi-datastore"}
                                        ;To use S3 locally, remove :local config and set some keys.
                                }
                      :staging-jenkins {:s3 {:bucket "staging-witan-kixi-datastore-filestore-jenkins"
                                             :endpoint "s3.eu-central-1.amazonaws.com"
                                             :link-expiration-mins 10}}
                      :staging {:s3 {:bucket "staging-witan-kixi-datastore-filestore"
                                     :endpoint "s3.eu-central-1.amazonaws.com"
                                     :link-expiration-mins 10}}
                      :prod {:s3 {:bucket "prod-witan-kixi-datastore-filestore"
                                  :endpoint "s3-eu-west-1.amazonaws.com"
                                  :link-expiration-mins 10}}}
 :metadata-creator {:enabled true}
 :metadatastore {:dynamodb #profile {:local {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                     :local-kinesis {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                     :staging-jenkins {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                     :staging {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                     :prod {:endpoint "dynamodb.eu-west-1.amazonaws.com"}}}
 :schemastore {:dynamodb #profile {:local {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                   :local-kinesis {:endpoint #or [#env DYNAMODB "http://localhost:8000"]}
                                   :staging-jenkins {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                   :staging {:endpoint "dynamodb.eu-central-1.amazonaws.com"}
                                   :prod {:endpoint "dynamodb.eu-west-1.amazonaws.com"}}}
 :structural-validator {:enabled true}
 :communications #profile {:local {:coreasync {:app "kixi.datastore"
                                               :metrics-level :NONE}}
                           :local-kinesis {:kinesis {:app "kixi.datastore"
                                                     :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                     :region-name "eu-central-1"
                                                     :dynamodb-endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                                     :streams {:event #or [#env EVENT_STREAM  "kixi-datastore-local-event"]
                                                               :command #or [#env COMMAND_STREAM "kixi-datastore-local-command"]}
                                                     :metrics-level :NONE
                                                     :initial-lease-table-read-capacity 1
                                                     :initial-lease-table-write-capacity 1
                                                     :teardown-kinesis true
                                                     :teardown-dynamodb true
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 100]
                                                     }}
                           :staging-jenkins {:coreasync {:app "kixi.datastore"}}
                           :staging {:kinesis {:app "kixi.datastore"
                                               :endpoint "kinesis.eu-central-1.amazonaws.com"
                                               :region-name "eu-central-1"
                                               :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                               :initial-lease-table-read-capacity 1
                                               :initial-lease-table-write-capacity 1
                                               :streams {:event "staging-witan-event"
                                                         :command "staging-witan-command"}
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                               :metrics-level :NONE
                                               }}
                           :staging-integration {:kinesis {:app "kixi.datastore-staging-test"
                                                           :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                           :region-name "eu-central-1"
                                                           :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                           :initial-lease-table-read-capacity 1
                                                           :initial-lease-table-write-capacity 1
                                                           :streams {:event "staging-witan-event"
                                                                     :command "staging-witan-command"}
                                                           :teardown-dynamodb true
                                                           :metrics-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                                           }}
                           :prod {:kinesis {:app "kixi.datastore"
                                            :endpoint "kinesis.eu-west-1.amazonaws.com"
                                            :region-name "eu-west-1"
                                            :dynamodb-endpoint "dynamodb.eu-west-1.amazonaws.com"
                                            :initial-lease-table-read-capacity 2
                                            :initial-lease-table-write-capacity 2
                                            :streams {:event "prod-witan-event"
                                                      :command "prod-witan-command"}
                                            :metrics-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                            }}}
 :repl {:port 5002}}
