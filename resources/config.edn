{:service-name "kixi.datastore"
 :alerts {:region "eu-central-1"
          :sns  "arn:aws:sns:eu-central-1:165664414043:witan-to-slack"
          :alerts? #profile {:staging true
                             :production true}}
 :web-server #profile {:local {:vhost #or [#env VHOST "localhost"]
                               :port 8080
                               :request-logging? true}
                       :staging-integration {:vhost #or [#env VHOST "localhost"]
                                             :port 8080
                                             :request-logging? true}
                       :staging-jenkins {:vhost "localhost"
                                         :port 8080
                                         :request-logging? true}
                       :staging {:vhost "kixi.datastore.marathon.mesos"
                                 :port 18080
                                 :request-logging? true}}
 :metrics {:json-reporter {:seconds #profile {:staging 60
                                              :local 300
                                              :staging-jenkins 600}}}
 :logging {:level :info ; e/o #{:trace :debug :info :warn :error :fatal :report}
           ;; Control log filtering by namespaces/patterns. Useful for turning off
           ;; logging in noisy libraries, etc.:
           ;;:ns-whitelist  ["whiner.*"] #_["my-app.foo-ns"]
           :ns-blacklist ["org.eclipse.jetty"]
           :kixi-comms-verbose-logging #profile {:local true
                                                 :staging-jenkins true
                                                 :staging-integration true
                                                 :staging true}
           :appender #profile {:local :println
                               :staging-jenkins :println
                               :staging-integration :println
                               :staging :json}}
 :filestore #profile {:local {:local {:base-dir "/kixi-datastore"}
                                        ;To use S3 locally, remove :local config and set some keys.
                              #_:s3 #_{:bucket "kixi-data-store-file-store-staging"
                                       :endpoint "s3.eu-central-1.amazonaws.com"
                                       :link-expiration-mins 10
                                       :profile "witan"}}
                      :staging-jenkins {:s3 {:bucket "staging-witan-kixi-datastore-filestore-jenkins"
                                             :endpoint "s3.eu-central-1.amazonaws.com"
                                             :link-expiration-mins 10}}
                      :staging-integration {:local {:base-dir "/kixi-datastore"}}
                      :staging {:s3 {:bucket "staging-witan-kixi-datastore-filestore"
                                     :endpoint "s3.eu-central-1.amazonaws.com"
                                     :link-expiration-mins 10}}
                      :prod {:s3 {:bucket "prod-witan-kixi-datastore-filestore"
                                  :endpoint "s3.eu-central-1.amazonaws.com"
                                  :link-expiration-mins 10}}}
 :metadatastore {:dynamodb #profile {:local {:endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                             :profile "local"}
                                     :staging-jenkins {:endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                       :profile "staging-jenkins"}
                                     :staging {:endpoint "dynamodb.eu-central-1.amazonaws.com"
                                               :profile "staging"}}}
 :schemastore {:dynamodb #profile {:local {:endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                           :profile "local"}
                                   :staging-jenkins {:endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                     :profile "staging-jenkins"}
                                   :staging {:endpoint "dynamodb.eu-central-1.amazonaws.com"
                                             :profile "staging"}}}
 :segmentation {:inmemory {}}
 :communications {:kinesis #profile {:local {:app "kixi.datastore"
                                             :endpoint "kinesis.eu-central-1.amazonaws.com"
                                             :dynamodb-endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                             :profile "local"
                                             :streams {:event #or [#env EVENT_STREAM  "kixi-datastore-local-event"]
                                                       :command #or [#env COMMAND_STREAM "kixi-datastore-local-command"]}
                                             :metric-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 100]
                                             }
                                     :staging-jenkins {:app "kixi.datastore"
                                                       :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                       :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                       :profile "staging-jenkins"
                                                       :streams {:event "staging-jenkins-kixi-datastore-event"
                                                                 :command "staging-jenkins-kixi-datastore-command"}
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 100]
                                                       }
                                     :staging {:app "kixi.datastore"
                                               :endpoint "kinesis.eu-central-1.amazonaws.com"
                                               :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                               :profile "staging"
                                               :streams {:event "staging-witan-event"
                                                         :command "staging-witan-command"}
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                               }
                                     :staging-integration {:app "kixi.datastore-staging-test"
                                                           :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                           :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                           :profile "staging-integration"
                                                           :streams {:event "staging-witan-event"
                                                                     :command "staging-witan-command"}
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                                           }}}}
