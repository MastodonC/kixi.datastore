{:service-name "kixi.datastore"
 :web-server #profile {:local {:vhost #or [#env VHOST "localhost"]
                               :port 8080
                               :request-logging? true}
                       :test-staging {:vhost #or [#env VHOST "localhost"]
                                      :port 8080
                                      :request-logging? true}
                       :jenkins {:vhost "localhost"
                                 :port 8080
                                 :request-logging? true}
                       :staging {:vhost "kixi.datastore.marathon.mesos"
                                 :port 18080
                                 :request-logging? true}}
 :metrics {:json-reporter {:seconds #profile {:staging 60
                                              :local 300
                                              :jenkins 600}}}
 :logging {:level :info ; e/o #{:trace :debug :info :warn :error :fatal :report}
           ;; Control log filtering by namespaces/patterns. Useful for turning off
           ;; logging in noisy libraries, etc.:
           ;;:ns-whitelist  ["whiner.*"] #_["my-app.foo-ns"]
           :ns-blacklist ["org.eclipse.jetty"]
           :kixi-comms-verbose-logging #profile {:local true
                                                 :test-staging true
                                                 :staging true}
           :appender #profile {:local :println
                               :jenkins :println
                               :test-staging :println
                               :staging :json}}
 :filestore #profile {:local {:local {:base-dir "/kixi-datastore"}
                                        ;To use S3 locally, remove :local config and set some keys.
                              #_:s3 #_{:bucket "kixi-data-store-file-store-staging"
                                       :endpoint "s3.eu-central-1.amazonaws.com"
                                       :link-expiration-mins 10
                                       :profile "witan"}}
                      :jenkins {:s3 {:bucket "kixi-data-store-file-store-jenkins"
                                     :endpoint "s3.eu-central-1.amazonaws.com"
                                     :link-expiration-mins 10}}
                      :test-staging {:local {:base-dir "/kixi-datastore"}}
                      :staging {:s3 {:bucket "kixi-data-store-file-store-staging"
                                     :endpoint "s3.eu-central-1.amazonaws.com"
                                     :link-expiration-mins 10}}
                      :prod {:s3 {:bucket "production-kixi-data-store-file-store"
                                  :endpoint "s3.eu-central-1.amazonaws.com"
                                  :link-expiration-mins 10}}}
 :metadatastore {:elasticsearch #profile {:local {:host #or [#env ELASTICSEARCH "localhost"]
                                                  :port 9200
                                                  :native-port 9300}
                                          :jenkins {:discover "http://staging-masters.sandpit-vpc.kixi/service/elasticsearch/v1/tasks"
                                                    :cluster "mesos-ha"}
                                          :staging {:discover "http://staging-masters.sandpit-vpc.kixi/service/elasticsearch/v1/tasks"
                                                    :cluster "mesos-ha"}}}
 :schemastore {:elasticsearch #profile {:local {:host #or [#env ELASTICSEARCH "localhost"]
                                                :port 9200
                                                :native-port 9300}
                                        :jenkins {:discover "http://staging-masters.sandpit-vpc.kixi/service/elasticsearch/v1/tasks"
                                                  :cluster "mesos-ha"}
                                        :staging {:discover "http://staging-masters.sandpit-vpc.kixi/service/elasticsearch/v1/tasks"
                                                  :cluster "mesos-ha"}}}
 :segmentation {:inmemory {}}
 :communications {:kinesis #profile {:local {:app "kixi.datastore"
                                             :endpoint "kinesis.eu-central-1.amazonaws.com"
                                             :dynamodb-endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                             :profile "local"
                                             :teardown true
                                             :streams {:event #or [#env EVENT_STREAM  "kixi-datastore-local-event"]
                                                       :command #or [#env COMMAND_STREAM "kixi-datastore-local-command"]}
                                             :metric-level :NONE
                                             :idle-time-between-reads-in-millis 100}
                                     :jenkins {:app "kixi.datastore"
                                               :endpoint "kinesis.eu-central-1.amazonaws.com"
                                               :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                               :profile "jenkins"
                                               :teardown true
                                               :streams {:event "kixi-datastore-jenkins-event"
                                                         :command "kixi-datastore-jenkins-command"}
                                               :idle-time-between-reads-in-millis 100}
                                     :staging {:app "kixi.datastore"
                                               :endpoint "kinesis.eu-central-1.amazonaws.com"
                                               :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                               :profile "staging"
                                               :streams {:event "witan-staging-event"
                                                         :command "witan-staging-command"}
                                               :idle-time-between-reads-in-millis 200}
                                     :test-staging {:app "kixi.datastore-staging-test"
                                                    :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                    :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                    :profile "test-staging"
                                                    :streams {:event "witan-staging-event"
                                                              :command "witan-staging-command"}
                                                    :idle-time-between-reads-in-millis 100}}}}
